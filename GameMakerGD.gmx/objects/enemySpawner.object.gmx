<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>CannonSprite</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
alarm[4]=15;
bonusCounter = 0;
requiredForBonus = 5;
enemyType = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.5;
xpos = x + lengthdir_x(70, -phy_rotation +90);
ypos = y + lengthdir_y(70, -phy_rotation +90);
if(bonusCounter != requiredForBonus){    
    switch (enemyType)
    {   case 1:
            with (instance_create(xpos,ypos,enemy1)){
                phy_rotation=other.phy_rotation;
                physics_apply_local_impulse(0, 0, 0, -75);
            }
            break;
        case 2:
            with (instance_create(xpos,ypos,enemy2)){
                phy_rotation=other.phy_rotation;
                physics_apply_local_impulse(0, 0, 0, -75);
            }
            break;
        case 3:
            with (instance_create(xpos,ypos,enemy3)){
                phy_rotation=other.phy_rotation;
                physics_apply_local_impulse(0, 0, 0, -75);
            }
            break;
        case 4: 
            with (instance_create(xpos,ypos,enemy4)){
                phy_rotation=other.phy_rotation;
                physics_apply_local_impulse(0, 0, 0, -75);
            }
            break;
    }
} else {
    with (instance_create(xpos,ypos,powerUpEnemy)){
            phy_rotation=other.phy_rotation;
            physics_apply_local_impulse(0, 0, 0, -50);
    }
    bonusCounter = 0;
    requiredForBonus = irandom(5) + 5;
}
alarm[4]=random(45)+60;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_angular_velocity=0;
phy_rotation+=1;
if(image_index == 2){
    image_speed = 0;
    image_index = 0;    
}
if(bonusCounter &gt; requiredForBonus){
    bonusCounter = requiredForBonus;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>75,87</point>
    <point>55,75</point>
  </PhysicsShapePoints>
</object>
